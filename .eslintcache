[{"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\index.js":"1","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\App.js":"2","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\reportWebVitals.js":"3","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Characters.js":"4","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Episodes.js":"5","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Locations.js":"6","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\Navbar\\Navigation.js":"7","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\SoloChars\\SoloChar.js":"8","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationEpisode.js":"9","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationChar.js":"10","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\LocationCard\\LocationCard.js":"11","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\CharCards\\CharCard.js":"12","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\EpisodeCard\\EpisodeCard.js":"13","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationLocation.js":"14","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchListForm\\WatchListForm.js":"15","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\filters\\Search.js":"16","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\filters\\SearchLocation.js":"17","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\episodes.js":"18","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\characters.js":"19","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\locations.js":"20","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\WatchFilm.js":"21","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchList\\WatchList.js":"22","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchList\\Watch.js":"23"},{"size":500,"mtime":1629640723140,"results":"24","hashOfConfig":"25"},{"size":1048,"mtime":1629911074616,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1612961861000,"results":"27","hashOfConfig":"25"},{"size":5475,"mtime":1629913562123,"results":"28","hashOfConfig":"25"},{"size":1170,"mtime":1629912903339,"results":"29","hashOfConfig":"25"},{"size":1119,"mtime":1629898486186,"results":"30","hashOfConfig":"25"},{"size":1919,"mtime":1629910546804,"results":"31","hashOfConfig":"25"},{"size":936,"mtime":1629912903379,"results":"32","hashOfConfig":"25"},{"size":1012,"mtime":1629912903328,"results":"33","hashOfConfig":"25"},{"size":942,"mtime":1629912903355,"results":"34","hashOfConfig":"25"},{"size":2811,"mtime":1629912903414,"results":"35","hashOfConfig":"25"},{"size":702,"mtime":1629912903304,"results":"36","hashOfConfig":"25"},{"size":2610,"mtime":1629912903296,"results":"37","hashOfConfig":"25"},{"size":1111,"mtime":1629912903346,"results":"38","hashOfConfig":"25"},{"size":2592,"mtime":1629912903333,"results":"39","hashOfConfig":"25"},{"size":684,"mtime":1629912903408,"results":"40","hashOfConfig":"25"},{"size":724,"mtime":1629912903421,"results":"41","hashOfConfig":"25"},{"size":415,"mtime":1629725374465,"results":"42","hashOfConfig":"25"},{"size":840,"mtime":1629726267505,"results":"43","hashOfConfig":"25"},{"size":418,"mtime":1629725804406,"results":"44","hashOfConfig":"25"},{"size":1788,"mtime":1629912716272,"results":"45","hashOfConfig":"25"},{"size":614,"mtime":1629912613099,"results":"46","hashOfConfig":"25"},{"size":1028,"mtime":1629912903426,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"f86e1q",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\index.js",[],["101","102"],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\App.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\reportWebVitals.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Characters.js",["103"],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Episodes.js",["104"],"import React, {useState, useEffect} from \"react\";\nimport EpisodeCard from \"../components/EpisodeCard/EpisodeCard\";\nimport PaginationEpisode from \"../components/pagination/PaginationEpisode\";\nimport {getEpisodes} from \"../api/episodes\";\nimport styled from 'styled-components';\nexport default function Episodes() {\n    const [episode, setEpisode] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [episodePerPage] = useState(10);\n\n    useEffect(async () => {\n      const response = await getEpisodes();\n      if(response){\n         await setEpisode(response?.results)\n      }\n    }, []);\n\n    const indexOfLastPage = currentPage * episodePerPage;\n    const indexOfFirstPage = indexOfLastPage - episodePerPage;\n    const currentEpisode = episode.slice(indexOfFirstPage, indexOfLastPage);\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <Row>\n\n            <EpisodeCard key={episode.id} episode={currentEpisode} />\n            <PaginationEpisode episodePerPage={episodePerPage} totalEpisode={episode.length} paginate={paginate}/>\n        </Row>\n    )\n}\nconst Row=styled.table`\ncolor: black`\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\Locations.js",["105"],"import React, {useState, useEffect} from \"react\";\nimport LocationCard from \"../components/LocationCard/LocationCard\";\nimport PaginationLocation from \"../components/pagination/PaginationLocation\";\nimport {getLocations} from \"../api/locations\";\n\n\nexport default function Locations() {\n    const [location, setLocation] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [locationPerPage] = useState(10);\n\n\n    useEffect(async() => {\n        const response = await getLocations();\n        if(response){\n            await setLocation(response?.results)\n        }\n    }, []);\n\n\n    const indexOfLastPage = currentPage * locationPerPage;\n    const indexOfFirstPage = indexOfLastPage - locationPerPage;\n    const currentLocation = location.slice(indexOfFirstPage, indexOfLastPage);\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <table>\n\n            <LocationCard key={location.id} location={currentLocation} />\n            <PaginationLocation locationPerPage={locationPerPage} totalLocation={location.length} paginate={paginate}/>\n        </table>\n    )\n}\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\Navbar\\Navigation.js",["106"],"import React from \"react\";\nimport styled from 'styled-components';\nimport {useLocation} from \"react-router\";\nimport {Link} from 'react-router-dom'\n\n\n\nexport const Navigation = () =>{\n    const location = useLocation()\n\n\n     return   <Container>\n\n           <Chars >\n                        <Box href=\"/\" active={location.pathname === 'http://localhost:3000/characters'}>\n                            Characters\n                        </Box>\n           </Chars>\n         <Episode>\n                        <Box href=\"/episodes\" active={location.pathname === 'http://localhost:3000/characters'}>\n                            Episodes\n                        </Box>\n         </Episode>\n            <RM>RICK & MORTY</RM>\n                <Location>\n\n                        <Box active={location.pathname === 'http://localhost:3000/characters'}\n                            href=\"/locations\"\n                        >Locations\n                        </Box>\n            </Location>\n\n                <WatchList>\n                        <Box active={location.pathname === 'http://localhost:3000/characters'}\n                            href=\"/watch-list\"\n                        >Watch list\n                        </Box>\n        </WatchList>\n        </Container>\n}\n\nconst RM=styled.div`\n  font-size: 27px;\n    font-weight: bold;\n`\nconst Chars=styled.div`\n  font-weight: bold;\n  text-decoration: none;\n  margin-left: 12%;\n  margin-top: 12px;\n`\nconst Location=styled.div`\n  font-weight: bold;\n  margin-top: 12px;\n`\nconst Episode= styled.div`\n  font-weight: bold;\n  margin-top: 12px;\n`\nconst WatchList=styled.div`\n  font-weight: bold;\n  margin-top: 12px;\n  margin-right: 12%;\n`\nconst Container=styled.div`\ndisplay: flex;\njustify-content: space-between;\npadding: 15px;\n  text-decoration-line: none;\n  background: #343a40;\n  \n`\nconst Box = styled.a`\n  color: ${props => props.active ? 'black' : 'white'};\ntext-decoration: blink;\n\n`\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\SoloChars\\SoloChar.js",["107","108","109"],"import React, {useState, useEffect} from \"react\";\nimport {oneCharacter} from \"../../api/characters\";\nimport styled from 'styled-components';\n\nexport default function SoloChar(props) {\n    const [char, setChar] = useState([]);\n    useEffect(async() => {\n        const response = await oneCharacter(props.match.params.id)\n        if(response){\n          await setChar(response)\n      }\n    }, []);\n    return (\n        <Container >\n            <div>\n            <h3>{char?.name}</h3>\n            <img src={char?.image} />\n            <p>Status: {char?.status}</p>\n            <p>Species: {char?.species}</p>\n            <p>Gender:{char?.gender}</p>\n            <p>Origin Name:{char?.origin && char?.origin?.name}</p>\n            </div>\n        </Container>\n    );\n}\nconst Container = styled.div`\ncolor:  rgb(26, 26, 26);\n  font-size: large;\n  font-weight: bold;\ndisplay: flex;\n  justify-content: center;\n`\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationEpisode.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationChar.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\LocationCard\\LocationCard.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\CharCards\\CharCard.js",["110"],"import React from \"react\"\nimport {Link} from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst CharCard = ({chars}) => {\n\n    return <Container>\n        {chars.map((char) => <div key={char.id} className='charCard'>\n            <Link className=\"btn-war\" to={`/chars/${char.id}`} key={char.id} role=\"button\">\n                <img src={char.image} alt=\"profile picture\"/>\n            </Link>\n               <Name> <h3>{char.name}</h3></Name>\n\n\n            </div>\n        )}\n\n   </Container>\n\n}\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between\n`\nconst Name =styled.h3`\n  max-width: 300px;\n  color: rgb(26, 26, 26);\n`\n\nexport default CharCard;\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\EpisodeCard\\EpisodeCard.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\pagination\\PaginationLocation.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchListForm\\WatchListForm.js",["111"],"import React, {useEffect, useRef} from 'react';\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField, withStyles} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst StyledIcon = withStyles((theme) => ({\r\n    root: {\r\n        color: 'black',\r\n        marginTop: \"20px\",\r\n    }\r\n}))(AddCircleOutlineIcon);\r\nconst StyledField = withStyles((theme) => ({\r\n    root: {\r\n        width: 400\r\n    }\r\n}))(TextField);\r\nconst StyledSelect = withStyles((theme) => ({\r\n    root: {\r\n        width: 200\r\n    }\r\n}))(Select);\r\n\r\nexport default function WatchListForm({setInputText, inputText, setTodos, todos, setStatus}) {\r\n\r\n    const inputTextHandler = (e) => {\r\n\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text: inputText, completed: false, id: Math.random() * 1000}\r\n        ])\r\n        setInputText('')\r\n    }\r\n    const inputRef = useRef()\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    }, [])\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <form>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                    <StyledField className=\"test\"\r\n                                 ref={inputRef}\r\n                                 value={inputText}\r\n                                 onChange={inputTextHandler}\r\n                                 variant=\"filled\"\r\n                                 label=\"Write episode...\"/>\r\n                    <StyledIcon onClick={submitTodoHandler} type=\"submit\">\r\n                        <AddCircleOutlineIcon/>\r\n                    </StyledIcon>\r\n                </form>\r\n\r\n                <div className=\"select\">\r\n                    <FormControl>\r\n                        <InputLabel>Choose</InputLabel>\r\n                        <StyledSelect\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            onChange={statusHandler}\r\n                        >\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            <MenuItem value='completed'>Completed</MenuItem>\r\n                            <MenuItem value='uncompleted'>Uncompleted</MenuItem>\r\n                        </StyledSelect>\r\n                    </FormControl>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\filters\\Search.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\filters\\SearchLocation.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\episodes.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\characters.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\api\\locations.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\pages\\WatchFilm.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchList\\WatchList.js",[],"C:\\Users\\Use96\\Desktop\\RM-test-task\\src\\components\\WatchList\\Watch.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":30,"column":15,"nodeType":"118","endLine":35,"endColumn":6},{"ruleId":"116","severity":1,"message":"117","line":11,"column":15,"nodeType":"118","endLine":16,"endColumn":6},{"ruleId":"116","severity":1,"message":"117","line":13,"column":15,"nodeType":"118","endLine":18,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":4,"column":9,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":7,"column":15,"nodeType":"118","endLine":12,"endColumn":6},{"ruleId":"116","severity":1,"message":"123","line":12,"column":8,"nodeType":"124","endLine":12,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":17,"column":13,"nodeType":"128","endLine":17,"endColumn":38},{"ruleId":"129","severity":1,"message":"130","line":10,"column":17,"nodeType":"128","endLine":10,"endColumn":62},{"ruleId":"119","severity":1,"message":"131","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":15},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'AddIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [props.match.params.id]",{"range":"137","text":"138"},[391,393],"[props.match.params.id]"]